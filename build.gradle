plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	// 🔇 모든 구성에서 commons-logging 배제 (spring-jcl 경고 제거)
	all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

dependencies {
	// --- Spring ---
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// --- DB ---
	runtimeOnly 'com.h2database:h2'

	// --- Google Cloud Vision ---
	implementation 'com.google.cloud:google-cloud-vision:3.29.0'

	// --- JSON ---
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// --- Dev ---
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// --- Lombok ---
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// --- Test ---
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// ✅ ANTLR: 런타임/툴을 4.13.0으로 고정해 버전 충돌 제거
	implementation 'org.antlr:antlr4-runtime:4.13.0'
	implementation 'org.antlr:antlr4:4.13.0'
}

/**
 * ❗중요
 * - 굳이 직접 넣어두었던 아래 2개는 제거했습니다.
 *   implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
 *   implementation 'org.hibernate.orm:hibernate-core:6.3.1.Final'
 *   → spring-boot-starter-data-jpa가 부트 BOM으로 **맞는 버전**을 자동 관리합니다.
 *     수동 고정은 하이버네이트/ANTLR 충돌 원인이 됩니다.
 */

// 🔧 모든 구성에서 ANTLR 버전 강제 (transitive로 4.10.1이 들어와도 4.13.0으로 통일)
configurations.configureEach {
	resolutionStrategy {
		force 'org.antlr:antlr4-runtime:4.13.0', 'org.antlr:antlr4:4.13.0'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}